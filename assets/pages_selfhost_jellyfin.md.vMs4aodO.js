import{_ as h,C as r,c as k,o as d,G as n,ai as t,w as l,j as s,a as i}from"./chunks/framework.rkAiPMxC.js";const f=JSON.parse('{"title":"Jellyfin - Власний медіа сервер","description":"","frontmatter":{},"headers":[],"relativePath":"pages/selfhost/jellyfin.md","filePath":"pages/selfhost/jellyfin.md","lastUpdated":1751661899000}'),o={name:"pages/selfhost/jellyfin.md"};function c(g,a,y,u,m,b){const E=r("Banner"),e=r("PluginTabsTab"),p=r("PluginTabs");return d(),k("div",null,[n(E,{text:"Jellyfin",image:"/pages/selfhost/jellyfin.png",blur:"5px"}),a[6]||(a[6]=t('<h1 id="jellyfin-власнии-медіа-сервер" tabindex="-1">Jellyfin - Власний медіа сервер <a class="header-anchor" href="#jellyfin-власнии-медіа-сервер" aria-label="Permalink to &quot;Jellyfin - Власний медіа сервер&quot;">​</a></h1><p>Jellyfin це серверне ПЗ, котре встановлюється на сервер (Windows версія є, але той во, навіть не думай) й використовує медіа на дисках, тобто контент Вам треба завантажувати окремо, це не готовий варіант щоб дивитися медіа та тем паче він не парсить з сайтів контент, максимум метадані.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Тут не буде інструкції як налаштовувати Jellyfin-stack софт, я розкажу тільки про те, що вони є й для чого воні існують, можливо, колись, напишу більш детально.</p></div><h2 id="потужності-для-стрімінгу" tabindex="-1">Потужності для стрімінгу <a class="header-anchor" href="#потужності-для-стрімінгу" aria-label="Permalink to &quot;Потужності для стрімінгу&quot;">​</a></h2><p>Не усі браузери та пристрої вміють у кодеки. наприклад HEVC, тому Jellyfin буде транскодувати контент у той кодек, котрий вміє пристрій. Можете сказати у чому проблема, а я вас скажу - конвертування медіа на лету дуже жре ресурси процесору, тому ми можемо перекласти цей процес на бік відеокарти. Це можна налаштувати у самому Jellyfin у Dashboard.</p><h2 id="як-встановлювати" tabindex="-1">Як встановлювати <a class="header-anchor" href="#як-встановлювати" aria-label="Permalink to &quot;Як встановлювати&quot;">​</a></h2><p>Для встановлення на систему раджу на Docker.</p>',7)),n(p,null,{default:l(()=>[n(e,{label:"docker-compose.yml"},{default:l(()=>a[0]||(a[0]=[s("div",{class:"language-docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"services:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  # REVERSE PROXY IS IN OTHER DOCKER COMPOSE STACK")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  #Jellyfin - used to display the media")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  #This can also be replaced by Emby/Plex")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  jellyfin:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    image: ghcr.io/linuxserver/jellyfin:latest")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    container_name: jellyfin")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    environment:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - DOCKER_MODS=linuxserver/mods:jellyfin-amd")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - JELLYFIN_PublishedServerUrl=${JELLYFIN_URL}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PUID=${PUID}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PGID=${PGID}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ports:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 8096:8096")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 8920:8920")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    devices:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"     - /dev/dri:/dev/dri #Required for jellyfin HW transcoding / QuickSync")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    volumes:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ${BASE_PATH}/jellyfin/config:/config:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ${MEDIA_SHARE}:/media:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # - ${BASE_PATH}/jellyfin/frontend:/usr/share/jellyfin/web:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    restart: unless-stopped")])])])],-1)])),_:1,__:[0]}),n(e,{label:".env"},{default:l(()=>a[1]||(a[1]=[s("div",{class:"language-env vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"env"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"BASE_PATH=/home/cakestwix/docker/jellyfin <--- Поміняти на свій шлях")]),i(`
`),s("span",{class:"line"},[s("span",null,"JELLYFIN_URL= <--- Поміняти на свій юрл")]),i(`
`),s("span",{class:"line"},[s("span",null,"PUID=1000")]),i(`
`),s("span",{class:"line"},[s("span",null,"PGID=1000")]),i(`
`),s("span",{class:"line"},[s("span",null,"MEDIA_SHARE=/media/Jellyfin <--- Поміняти на свій шлях")]),i(`
`),s("span",{class:"line"},[s("span",null,"TZ=Europe/Kiyv")])])])],-1)])),_:1,__:[1]})]),_:1}),a[7]||(a[7]=t('<h2 id="перше-налаштування" tabindex="-1">Перше налаштування <a class="header-anchor" href="#перше-налаштування" aria-label="Permalink to &quot;Перше налаштування&quot;">​</a></h2><p>Jellyfin працює на порті <code>8096</code>, заходимо та проходимо перше налаштування, вказуємо <code>/media/Shows</code>, <code>/media/Movies</code>, <code>/media/Anime/Series</code>, <code>/media/Anime/Movies</code> та тд.</p><div class="tip custom-block"><p class="custom-block-title">Чому стільки директорий, чому не одна?</p><p>Jellyfin бере метадані з сайтів по типу TheMovieDB, AniList та йому потрібна структура файлів, котру можна почитати у <a href="https://jellyfin.org/docs/general/server/media/shows" target="_blank" rel="noreferrer">оф документації</a>. Це важливо, якщо ви хочете без проблем додавати новий контент й не редагувати його власноруч.</p></div><h2 id="торрент-клієнт" tabindex="-1">Торрент-клієнт <a class="header-anchor" href="#торрент-клієнт" aria-label="Permalink to &quot;Торрент-клієнт&quot;">​</a></h2><p>Авжеж, ми будемо завантажувати тільки той контент, котрий купили, але прикро, що нам такої можливості не дають, тому торрент форева.</p><p>Я сам використовую Transmission 4.0.5 т.я має зручні застосунки Tremotesf під <a href="https://github.com/equeim/tremotesf2" target="_blank" rel="noreferrer">PC</a> та під <a href="https://f-droid.org/en/packages/org.equeim.tremotesf/" target="_blank" rel="noreferrer">Android</a></p><div class="tip custom-block"><p class="custom-block-title">Чому саме цю версію?</p><p>Коли я оновився на 4.0.6 то він почав спаміти у трекери інфою й були помилки. У master гілці це було пофікшено.</p></div><p>Ще є qBitTorrent, там більш потужний веб-інтерфейс, більше функцій та тд.</p>',8)),n(p,null,{default:l(()=>[n(e,{label:"Transmission"},{default:l(()=>a[2]||(a[2]=[s("div",{class:"language-docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"transmission:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    image: linuxserver/transmission:4.0.5")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    container_name: transmission")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    environment:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PUID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PGID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - TZ=Europe/Kiyv")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - USER=UserTransmission")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PASS=PassWord")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ports:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 9091:9091    # Web")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 51413:51413  # Torrent port")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    volumes:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ${BASE_PATH}/transmission/config:/config:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ${MEDIA_SHARE}:/media:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    restart: unless-stopped")])])])],-1)])),_:1,__:[2]}),n(e,{label:"qBitTorrent"},{default:l(()=>a[3]||(a[3]=[s("div",{class:"language-docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"qbittorrent:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    image: lscr.io/linuxserver/qbittorrent:latest")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    container_name: qbittorrent")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    environment:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PUID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PGID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - TZ=Etc/UTC")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - WEBUI_PORT=8080")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - TORRENTING_PORT=6881")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    volumes:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # - /path/to/qbittorrent/appdata:/config")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ${MEDIA_SHARE}:/media:z")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ports:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 8080:8080 # Web")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 6881:6881 # Torrent ports")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 6881:6881/udp")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    restart: unless-stopped")])])])],-1)])),_:1,__:[3]})]),_:1}),a[8]||(a[8]=t('<h2 id="парсер-торрент-трекерів" tabindex="-1">Парсер торрент трекерів <a class="header-anchor" href="#парсер-торрент-трекерів" aria-label="Permalink to &quot;Парсер торрент трекерів&quot;">​</a></h2><p>Це буде корисно для *arr застосунків, котрі будуть шукати коентет у трекерах, але імплементувати під усі сайти буде складно, тому цей функціонал перенесли на інший сервіс.</p><p>Раніше використовував Jackett, була Toloka та Utopia, було зручно самому шукати там щось цікаве, але краще мати більш інтегрований сервіс під *arr, котрий сам є *arr - Prowlarr <img src="https://prowlarr.com/img/indexer-index.png" alt="Prowlarr"></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Якщо у вас буде саме Prowlarr, а не Jackett то не треба налаштовувати індексери у Sonarr/Radarr, Prowlarr зробить це за вас, вам потрібно буде додати тільки клієнт для завантаження контенту.</p></div>',4)),n(p,null,{default:l(()=>[n(e,{label:"Prowlarr"},{default:l(()=>a[4]||(a[4]=[s("div",{class:"language-docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"prowlarr:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    image: lscr.io/linuxserver/prowlarr:latest")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    container_name: prowlarr")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    environment:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PUID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PGID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - TZ=Europe/Kiyv")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    volumes:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ./prowlarr:/config")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ports:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 9696:9696 # Web")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    restart: unless-stopped")])])])],-1)])),_:1,__:[4]}),n(e,{label:"Jackett"},{default:l(()=>a[5]||(a[5]=[s("div",{class:"language-docker vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"docker"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"jackett:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    image: lscr.io/linuxserver/jackett:latest")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    container_name: jackett")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    environment:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PUID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - PGID=1000")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - TZ=Europe/Kiyv")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - AUTO_UPDATE=true #optional")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - RUN_OPTS= #optional")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    volumes:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - ./config:/config")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # - ./blackhole:/downloads")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ports:")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - 9117:9117")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    restart: unless-stopped")])])])],-1)])),_:1,__:[5]})]),_:1}),a[9]||(a[9]=t(`<h2 id="застосунки-arr" tabindex="-1">Застосунки *arr <a class="header-anchor" href="#застосунки-arr" aria-label="Permalink to &quot;Застосунки *arr&quot;">​</a></h2><p>Власноруч завантажувати контент напевно буде не зручно, особливо іншим користувачам без доступу до диску, наприклад</p><p>Для цього створили веб-застосунки Sonarr та Radarr для серіалів та фільмів відповідно. Інтерфейс *arr майже однаковий, тому почну з Sonarr</p><h3 id="sonarr" tabindex="-1">Sonarr <a class="header-anchor" href="#sonarr" aria-label="Permalink to &quot;Sonarr&quot;">​</a></h3><p>Sonarr - шукає у індексерах шоу, серіали але не фільми! Фільми буде шукати вже Radarr. Дає торрент-файл у завантажувач файлів, наприклад Transmission та сам Transmission завантажує у директорію, котру зможе прочитати сам Jellyfin для програвання у плеєрі. Так само працюють й інші *arr додатки</p><p><img src="https://docs.theme-park.dev/themes/addons/sonarr/sonarr-darker/screenshot1.png" alt="Sonarr"></p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Sonarr - used to find shows automatically</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sonarr:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  image: lscr.io/linuxserver/sonarr:latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  container_name: sonarr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  environment:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PUID=\${PUID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PGID=\${PGID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - TZ=\${TZ}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  volumes:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${BASE_PATH}/sonarr/config:/config:z</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${MEDIA_SHARE}:/data:z #Access to the entire /media</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ports:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - 8989:8989</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  restart: unless-stopped</span></span></code></pre></div><h3 id="radarr" tabindex="-1">Radarr <a class="header-anchor" href="#radarr" aria-label="Permalink to &quot;Radarr&quot;">​</a></h3><p>Radarr - шукає у індексерах фільми.</p><p><img src="https://radarr.video/img/features/blacklist.png" alt="Radarr"></p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Radarr - used to find movies automatically</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">radarr:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  image: lscr.io/linuxserver/radarr:latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  container_name: radarr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  environment:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PUID=\${PUID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PGID=\${PGID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - TZ=\${TZ}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  volumes:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${BASE_PATH}/radarr/config:/config:z</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${MEDIA_SHARE}:/data:z #Access to the entire /media</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ports:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - 7878:7878</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  restart: unless-stopped</span></span></code></pre></div><h3 id="jellyseerr" tabindex="-1">Jellyseerr <a class="header-anchor" href="#jellyseerr" aria-label="Permalink to &quot;Jellyseerr&quot;">​</a></h3><p>Зручний додаток щоб дати можливість користувачам без адмін-прав на сервері завантажувати контент по запитам.</p><p><img src="https://discourse.linuxserver.io/uploads/default/ad6fba8f5760460a69aa44df0bbeda020b9db8f7" alt="Jellyseerr"></p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#jellyseer - allows users to request media on their own</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jellyseerr:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  image: fallenbagel/jellyseerr:latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  container_name: jellyseerr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  environment:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PUID=\${PUID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - PGID=\${PGID}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - TZ=\${TZ}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  volumes:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${BASE_PATH}/jellyseerr/config:/app/config:z</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - \${MEDIA_SHARE}:/data:z #Access to the entire \${BASE_PATH}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ports:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - 5055:5055</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  restart: unless-stopped</span></span></code></pre></div>`,15))])}const v=h(o,[["render",c]]);export{f as __pageData,v as default};
